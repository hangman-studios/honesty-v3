# File structure of values.yaml:
# |-- 1. Database
# |-- 2. Studio
# |-- 3. Auth
# |-- 4. Rest
# |-- 5. Realtime
# |-- 6. Meta
# |-- 7. Storage
# |-- 8. Kong

domain:
  name: niiclas.de

application:
  name: polls
  # is handled as subdomein. if helm release name is not "prod" 
  # it gets prefixed with release name
  # like "dev-polls.niiclas.de", "dev-polls-api.niiclas.de" etc.

secret:
  nameOverride: ""
  fullnameOverride: ""
  serviceAccount:
    create: true
    annotations: {}
    name: ""

# Optional: Postgres Database
# A standalone Postgres database configured to work with Supabase services. 
# You can spin up any other Postgres database container if required. 
# If so, make sure to adjust DB_HOST accordingly to point to the right database service.
db:
  enabled: false # Disable the database provisioning
  secretName: "supabase-db" # Still NEEDS TO BE DEFINED, even if database provisioning is disabled
  userName: postgres
  image:
    repository: supabase/postgres
    pullPolicy: IfNotPresent
    tag: "latest"
  imagePullSecrets: []
  replicaCount: 2
  nameOverride: ""
  fullnameOverride: ""
  serviceAccount:
    create: true
    annotations: {}
    name: ""
  podAnnotations: {}
  podSecurityContext: {}
  securityContext: {}
  service:
    type: ClusterIP
    port: 5432
  resources: 
    limits:
      ephemeral-storage: "128Mi"
      memory: 256Mi
    requests:
      cpu: 200m
      memory: 256Mi
  persistence:
    enabled: false
  storage:
    mountPath: /var/lib/postgresql/data
    storageClassName: "openebs-jiva-csi-default"
    annotations: 
      helm.sh/resource-policy: "keep"
    size: 5Gi
    accessModes:
      - ReadWriteOnce
    class: ""
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80
  nodeSelector: {}
  tolerations: []
  affinity: {}

# Studio Application
studio:
  enabled: true # Disable the studio
  image:
    repository: supabase/studio
    pullPolicy: IfNotPresent
    tag: "latest"
  imagePullSecrets: []
  replicaCount: 1
  nameOverride: ""
  fullnameOverride: ""
  serviceAccount:
    create: true
    annotations: {}
    name: ""
  podAnnotations: {}
  podSecurityContext: {}
  securityContext: {}
  service:
    type: ClusterIP
    port: 3000
  environment: {}
  ingress:
    enabled: false
  resources: 
    limits:
      ephemeral-storage: "128Mi"
      memory: 128Mi
    requests:
      cpu: 100m
      memory: 128Mi
  autoscaling:
    enabled: true
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80
  nodeSelector: {}
  tolerations: []
  affinity: {}

# Auth Service
auth:
  enabled: true # Disable the auth service
  image:
    repository: supabase/gotrue
    pullPolicy: IfNotPresent
    tag: "latest"
  imagePullSecrets: []
  replicaCount: 1
  nameOverride: ""
  fullnameOverride: ""
  serviceAccount:
    create: true
    annotations: {}
    name: ""
  podAnnotations: {}
  podSecurityContext: {}
  securityContext: {}
  service:
    type: ClusterIP
    port: 9999
  environment:
    GOTRUE_API_HOST: "0.0.0.0"
    GOTRUE_API_PORT: "9999"
    GOTRUE_URI_ALLOW_LIST: "*"
    GOTRUE_DISABLE_SIGNUP: "false"
    GOTRUE_JWT_DEFAULT_GROUP_NAME: authenticated
    GOTRUE_JWT_ADMIN_ROLES: service_role
    GOTRUE_JWT_AUD: authenticated
    GOTRUE_JWT_EXP: "3600"
    GOTRUE_EXTERNAL_EMAIL_ENABLED: "true"
    GOTRUE_MAILER_AUTOCONFIRM: "true"
    GOTRUE_SMTP_ADMIN_EMAIL: "info@niiclas.de"
    GOTRUE_SMTP_HOST: "email-smtp.eu-central-1.amazonaws.com"
    GOTRUE_SMTP_PORT: "465"
    GOTRUE_SMTP_SENDER_NAME: "Info"
    GOTRUE_EXTERNAL_PHONE_ENABLED: "false"
    GOTRUE_SMS_AUTOCONFIRM: "false"
  resources: 
    limits:
      ephemeral-storage: "128Mi"
      memory: 128Mi
    requests:
      cpu: 100m
      memory: 128Mi
  autoscaling:
    enabled: true
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80
  nodeSelector: {}
  tolerations: []
  affinity: {}

# Rest Service
rest:
  enabled: true # Disable the rest service
  image:
    repository: postgrest/postgrest
    pullPolicy: IfNotPresent
    tag: "latest" 
  imagePullSecrets: []
  nameOverride: ""
  fullnameOverride: ""
  serviceAccount:
    create: true
    annotations: {}
    name: ""
  podAnnotations: {}
  podSecurityContext: {}
  securityContext: {}
  service:
    type: ClusterIP
    port: 3000
  environment:
    PGRST_DB_SCHEMA: public,storage
    PGRST_DB_ANON_ROLE: anon
    PGRST_DB_USE_LEGACY_GUCS: "false"
  resources: 
    limits:
      ephemeral-storage: "128Mi"
      memory: 128Mi
    requests:
      cpu: 100m
      memory: 128Mi
  autoscaling:
    enabled: true
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80
  nodeSelector: {}
  tolerations: []
  affinity: {}

# Realtime Service
realtime:
  enabled: true # Disable the realtime service
  image:
    repository: supabase/realtime
    pullPolicy: IfNotPresent
    tag: "v2.10.1"
  imagePullSecrets: []
  nameOverride: ""
  fullnameOverride: "" 
  serviceAccount:
    create: true
    annotations: {}
    name: ""
  podAnnotations: {}
  podSecurityContext: {}
  securityContext:
    allowPrivilegeEscalation: false
    runAsUser: 0
  service:
    type: ClusterIP
    port: 4000
  environment:
    PORT: "4000"
    REPLICATION_MODE: RLS
    REPLICATION_POLL_INTERVAL: "100"
    SECURE_CHANNELS: "true"
    SLOT_NAME: supabase_realtime_rls
    TEMPORARY_SLOT: "true"
    SECRET_KEY_BASE: "UpNVntn3cDxHJpq99YMc1T1AQgQpc8kfYTuRgBiYa15BLrx8etQoXz3gZv1/u2oq"
    DB_AFTER_CONNECT_QUERY: 'SET search_path TO _realtime'
    DB_ENC_KEY: supabaserealtime
    FLY_ALLOC_ID: fly123
    FLY_APP_NAME: realtime
    ERL_AFLAGS: -proto_dist inet_tcp
    ENABLE_TAILSCALE: "false"
    DNS_NODES: "''"
  resources: 
    limits:
      ephemeral-storage: "128Mi"
      memory: 256Mi
    requests:
      cpu: 200m
      memory: 256Mi
  autoscaling:
    enabled: true
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80
  nodeSelector: {}
  tolerations: []
  affinity: {}

# Meta Service
meta:
  enabled: true # Disable the meta service
  image:
    repository: supabase/postgres-meta
    pullPolicy: IfNotPresent
    tag: "latest"
  imagePullSecrets: []
  replicaCount: 1  
  nameOverride: ""
  fullnameOverride: ""
  serviceAccount:
    create: true
    annotations: {}
    name: ""
  podAnnotations: {}
  podSecurityContext: {}
  securityContext: {}
  service:
    type: ClusterIP
    port: 8080
  environment:
    PG_META_PORT: "8080"
  resources:
    limits:
      ephemeral-storage: "128Mi"
      memory: 128Mi
    requests:
      cpu: 100m
      memory: 128Mi
  autoscaling:
    enabled: true
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80
  nodeSelector: {}
  tolerations: []
  affinity: {}    

# Storage Service
storage:
  enabled: true # Disable the storage service
  image:
    repository: supabase/storage-api
    pullPolicy: IfNotPresent
    tag: "latest"
  imagePullSecrets: []
  replicaCount: 1
  nameOverride: ""
  fullnameOverride: ""
  serviceAccount:
    create: true
    annotations: {}
    name: ""
  podAnnotations: {}
  podSecurityContext: {}
  securityContext: {}
  service:
    type: ClusterIP
    port: 5000
  environment:
    PGOPTIONS: -c search_path=storage,public
    FILE_SIZE_LIMIT: '52428800'
    STORAGE_BACKEND: file
    FILE_STORAGE_BACKEND_PATH: /var/lib/storage
    TENANT_ID: stub
    REGION: stub
    GLOBAL_S3_BUCKET: stub
  resources:
    limits:
      ephemeral-storage: "128Mi"
      memory: 128Mi
    requests:
      cpu: 100m
      memory: 128Mi
  persistence:
    enabled: true
    storageClassName: "openebs-jiva-csi-default"
    # annotations: 
    #   helm.sh/resource-policy: "keep"
    size: 5Gi
    accessModes:
      - ReadWriteOnce
    class: ""
  autoscaling:
    enabled: true
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80
  nodeSelector: {}
  tolerations: []
  affinity: {}

# Kong
kong:
  enabled: true # Disable the kong service
  image:
    repository: kong
    pullPolicy: IfNotPresent
    tag: "3.3"
  imagePullSecrets: []
  replicaCount: 2
  nameOverride: ""
  fullnameOverride: ""
  serviceAccount:
    create: true
    annotations: {}
    name: ""
  podAnnotations: {}
  podSecurityContext: {}
  securityContext: 
    allowPrivilegeEscalation: false
    runAsUser: 0
  service:
    type: NodePort
    port: 8000
  environment:
    KONG_DATABASE: "off"
    KONG_DECLARATIVE_CONFIG: /usr/local/kong/kong.yml
    # https://github.com/supabase/cli/issues/14
    KONG_DNS_ORDER: LAST,A,CNAME
    KONG_PLUGINS: request-transformer,cors,key-auth,acl
  ingress:
    enabled: true
  resources: 
    limits:
      ephemeral-storage: "128Mi"
      memory: 512Mi
    requests:
      cpu: 100m
      memory: 512Mi
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80
  nodeSelector: {}
  tolerations: []
  affinity: {}
  config: {}

frontend:
  enabled: true
  replicaCount: 1
  image:
    repository: ghcr.io/jniclas/honesty
    pullPolicy: IfNotPresent
    tag: "1.0.5"
  nameOverride: ""
  fullnameOverride: ""
  serviceAccount:
    create: true
    annotations: {}
    name: "honesty"
  podAnnotations: {}
  podSecurityContext: {}
  securityContext: {}
  environment:
    PGRST_DB_SCHEMA: public
  service:
    type: NodePort
    port: 3000
    ws_port: 31111
  ingress:
    enabled: true
  resources:
    limits:
      cpu: 500m
      memory: 2Gi
    requests:
      cpu: 500m
      memory: 2Gi
  autoscaling:
    enabled: true
    minReplicas: 1
    maxReplicas: 3
    targetCPUUtilizationPercentage: 80
    targetMemoryUtilizationPercentage: 80
  nodeSelector: {}
  tolerations: []
  affinity: {}